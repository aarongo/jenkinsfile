#!/usr/bin/env groovy
pipeline {

    parameters {
        string(name: 'url', description: "测试外网的URL")
    }

    stage '检测是否可以连接外网'

    node {
        deleteDir()
        checkout scm

        wrap([$class: 'AnsiColorBuildWrapper', colorMapName: 'xterm']){
            ansiblePlaybook(
                playbook: '/Users/lonny/Documents/Ansible_Book/playbooks/pipeline_yml/ping.yml',
                inventory: '/Users/lonny/Documents/Ansible_Book/playbooks/inventory/hosts',
                extras: '-e url=params.url',
                colorized: true
            )
        }
        input '是否继续?'
    }

    stage '检测系统时间'

    node {
        wrap([$class: 'AnsiColorBuildWrapper', colorMapName: 'xterm']){
            ansiblePlaybook(
                playbook: '/Users/lonny/Documents/Ansible_Book/playbooks/pipeline_yml/time.yml',
                inventory: '/Users/lonny/Documents/Ansible_Book/playbooks/inventory/hosts',
                colorized: true
            )
        }
    }

    stage '检测系统定时任务'

    node {
        wrap([$class: 'AnsiColorBuildWrapper', colorMapName: 'xterm']){
            ansiblePlaybook(
                playbook: '/Users/lonny/Documents/Ansible_Book/playbooks/pipeline_yml/crontab.yml',
                inventory: '/Users/lonny/Documents/Ansible_Book/playbooks/inventory/hosts',
                colorized: true
            )
        }
}
}
